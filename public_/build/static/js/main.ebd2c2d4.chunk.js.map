{"version":3,"sources":["components/Main/Main.module.css","App.module.css","images/nextIcon.svg","images/checkIcon.svg","images/completed.svg","images/sad.svg","images/welcome.svg","images/loader.svg","images/github.svg","components/Main/Main.tsx","API.tsx","firebase.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Main","question","setNumber","number","answers","questionNm","correctAnswer","startQuiz","useState","score","setScore","userAnswers","setUserAnswers","userAnswer","setUserAnswer","gameOver","setGameOver","correctNumber","setCorrectNumber","checkAnswer","e","answer","currentTarget","value","correct","prev","answerObject","className","styles","container","style","overflow","undefined","progressBarContainer","max","bar","length","src","checkIcon","gameContainer","dangerouslySetInnerHTML","__html","answersContainer","map","disabled","onClick","totalQuestions","nextIcon","resultsContainer","sad","completed","color","resultDetails","item","FetchData","a","fetch","json","data","results","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","messaging","requestPermission","then","getToken","token","console","log","array","start","setStart","loading","setLoading","setData","handleClick","github","href","githubIcon","alt","welcome","loader","incorrect_answers","correct_answer","sort","Math","random","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ebd2c2d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__1XSjT\",\"progressBarContainer\":\"Main_progressBarContainer__2-a3C\",\"bar\":\"Main_bar__20PvM\",\"checkIcon\":\"Main_checkIcon__2dnRD\",\"questionNm\":\"Main_questionNm__1eQus\",\"gameContainer\":\"Main_gameContainer__3Hv7G\",\"score\":\"Main_score__3wDyB\",\"question\":\"Main_question__h_LbU\",\"answersContainer\":\"Main_answersContainer__12O17\",\"nextIcon\":\"Main_nextIcon__1bwyC\",\"resultsContainer\":\"Main_resultsContainer__3qgvg\",\"resultDetails\":\"Main_resultDetails__sOA9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2PWew\",\"github\":\"App_github__3uwda\",\"rotate\":\"App_rotate__1JeW-\",\"welcome\":\"App_welcome__1kp23\",\"loading\":\"App_loading__3wTc_\",\"loader\":\"App_loader__3SHLc\"};","module.exports = __webpack_public_path__ + \"static/media/nextIcon.f7077708.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkIcon.2b8a12a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/completed.ef837541.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.d14cd80e.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome.acf1332f.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.d4857d8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.990b9763.svg\";","import React, { useState } from 'react';\r\nimport nextIcon from '../../images/nextIcon.svg'\r\nimport checkIcon from '../../images/checkIcon.svg'\r\nimport completed from '../../images/completed.svg'\r\nimport sad from '../../images/sad.svg'\r\nimport styles from './Main.module.css';\r\n\r\nconst totalQuestions = 10\r\n\r\n// props interface\r\ntype Props = {\r\n    question: string\r\n    setNumber: Function\r\n    number: number\r\n    answers: string[]\r\n    questionNm: number\r\n    correctAnswer: string\r\n    startQuiz: Function\r\n}\r\n\r\n// Final result interface\r\ntype AnswerObject = {\r\n    question: string\r\n    answer: string\r\n    correct: boolean\r\n    correctAnswer: string\r\n    questionNm: number\r\n}\r\n\r\nconst Main: React.FC<Props> = ({\r\n    question,\r\n    setNumber,\r\n    number,\r\n    answers,\r\n    questionNm,\r\n    correctAnswer,\r\n    startQuiz,\r\n}) => {\r\n\r\n    // States\r\n    const [score, setScore] = useState(0)\r\n    const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([])\r\n    const [userAnswer, setUserAnswer] = useState(false)\r\n    const [gameOver, setGameOver] = useState(false)\r\n    const [correctNumber, setCorrectNumber] = useState(0)\r\n\r\n    // Next button function\r\n    const handleNextButton = () => {\r\n        if (number !== totalQuestions - 1) {\r\n            setNumber((prev: number) => prev + 1)\r\n            setUserAnswer(false)\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    // check answer\r\n    const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        const answer = e.currentTarget.value\r\n        const correct = correctAnswer === answer\r\n\r\n        if (correct) {\r\n            setScore(prev => prev + 10)\r\n            setCorrectNumber(prev => prev + 1)\r\n        }\r\n\r\n        const answerObject = {\r\n            question: question,\r\n            answer,\r\n            correct,\r\n            correctAnswer: correctAnswer,\r\n            questionNm: questionNm,\r\n        }\r\n        setUserAnswers((prev) => [...prev, answerObject])\r\n        userAnswers ? setUserAnswer(true) : setUserAnswer(false)\r\n    }\r\n\r\n    const handleResult = () => {\r\n        return (\r\n            userAnswers.length === 10 ?\r\n                setGameOver(true) : null\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} style={gameOver ? { overflow: 'scroll' } : undefined} >\r\n\r\n            {/* Progress Bar Container */}\r\n            <div className={styles.progressBarContainer}>\r\n                <progress\r\n                    // id=\"file\"\r\n                    value={number + 1}\r\n                    max={totalQuestions}\r\n                    className={styles.bar}\r\n                ></progress>\r\n                {\r\n                 userAnswers.length === 10\r\n                        ?\r\n                        <img src={checkIcon} className={styles.checkIcon} />\r\n                        :\r\n                        <p className={styles.questionNm}>{questionNm}/{totalQuestions}</p>\r\n                }\r\n            </div>\r\n\r\n            {/* Questions and Answers Card */}\r\n            {\r\n                !gameOver && userAnswers.length !== 10\r\n                    ?\r\n                    <div className={styles.gameContainer}>\r\n\r\n                        <h6 className={styles.question} dangerouslySetInnerHTML={{ __html: question}} />\r\n\r\n                        <div className={styles.answersContainer}>\r\n                            {\r\n                                answers.map(answer => (\r\n                                    <button\r\n                                        disabled={userAnswer}\r\n                                        value={answer}\r\n                                        onClick={checkAnswer}\r\n                                    >\r\n                                        {answer}\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                        </div>\r\n\r\n                        {/* next button */}\r\n                        {number !== totalQuestions - 1 && userAnswer ? <img src={nextIcon} onClick={handleNextButton} className={styles.nextIcon} /> : null}\r\n\r\n                    </div>\r\n                    : null}\r\n\r\n            {/*  Result */}\r\n            {\r\n                userAnswers.length === 10 && !gameOver ?\r\n                    number === totalQuestions - 1 \r\n                    ? \r\n                    <div className={styles.resultsContainer}>\r\n\r\n                        <img src={correctNumber < 5 ? sad : completed} />\r\n                        <h1 style={score < 50 ? {color: '#c80e13'} : {color: 'green'}}>Completed</h1> \r\n                        <h2 className={styles.score}>Score: <span style={score < 50 ? {color: '#c80e13'} : {color: 'green'}}>{score}</span></h2>\r\n                        <h3>Correct: <span style={correctNumber < 5 ? {color: '#c80e13'} : {color: 'green'}}>{correctNumber}</span></h3>\r\n                        <p style={score < 50 ? {color: '#c80e13'} : {color: 'green'}}>\r\n                            {correctNumber < 5 ? `You can do better than this.` : `Great Job!`}\r\n                        </p>\r\n                        <button onClick={handleResult}>Complete Details</button> \r\n\r\n                    </div>\r\n                    : null \r\n                    : null\r\n            }\r\n\r\n            {/* Result Details */}\r\n            {\r\n                gameOver && userAnswers.length === 10 ?\r\n                    <div className={styles.resultDetails}>\r\n                        {\r\n                            userAnswers.map(item => (\r\n                                <>\r\n                                    <h2>Question {item.questionNm}</h2>\r\n                                    <p \r\n                                        dangerouslySetInnerHTML={{ __html: item.question}} \r\n                                    />\r\n                                    <p \r\n                                        dangerouslySetInnerHTML={{ __html: `Your answer: ${item.answer}`}}\r\n                                        style={{ color: '#7d3cff' }}\r\n                                    />\r\n                                    <p\r\n                                        dangerouslySetInnerHTML={{ __html: `Correct Answer: ${item.correctAnswer}`}}\r\n                                        style={{ color: 'green' }}\r\n                                    />\r\n                                    <p\r\n                                        style={ item.correct ? { color: 'green' } : { color: 'red' }}\r\n                                    >\r\n                                        {item.correct ? `Is your answer correct?: Yes` : `Is your answer correct?: No`}\r\n                                    </p>\r\n                                </>\r\n                            ))}\r\n                    </div> : null\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main\r\n","export const FetchData = async () => {\r\n\r\n    const data = await (await fetch('https://opentdb.com/api.php?amount=10&difficulty=easy&type=multiple')).json()\r\n\r\n    return data.results\r\n\r\n}\r\n","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCagmrO3EYIyWzqcKj6JwaMdLd0O0FV738\",\r\n    authDomain: \"messaging-app-fe33b.firebaseapp.com\",\r\n    databaseURL: \"https://messaging-app-fe33b.firebaseio.com\",\r\n    projectId: \"messaging-app-fe33b\",\r\n    storageBucket: \"messaging-app-fe33b.appspot.com\",\r\n    messagingSenderId: \"102951832883\",\r\n    appId: \"1:102951832883:web:ff69554080f6053553c246\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport default firebase","import React, { useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport Main from './components/Main/Main';\r\nimport welcome from './images/welcome.svg'\r\nimport loader from './images/loader.svg'\r\nimport githubIcon from './images/github.svg'\r\nimport { FetchData } from './API'\r\nimport firebase from './firebase'\r\n\r\ntype Question = {\r\n  category: string\r\n  correct_answer: string\r\n  incorrect_answers: string[]\r\n  difficulty: string\r\n  question: string\r\n  type: string \r\n}\r\n\r\nconst App = () => {\r\n\r\n  // firebase\r\n  const messaging = firebase.messaging()\r\n  messaging.requestPermission().then(() => {\r\n    return messaging.getToken()\r\n  }).then((token:any) => {\r\n    console.log('token', token)\r\n  })\r\n\r\n  const [start, setStart] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [data, setData] = useState<Question[]>([])\r\n  const [number, setNumber] = useState(0)\r\n\r\n  // Start Quiz\r\n  const handleClick = async () => {\r\n    setStart(true)\r\n    setLoading(true)\r\n\r\n    const data = await FetchData()\r\n    setData(data)\r\n    setLoading(false)\r\n\r\n  }\r\n\r\n  // shuffle answers\r\n  const answers = (array: any[]) => [...array].sort(() => Math.random() - 0.5)\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n\r\n      {/* github */}\r\n      <div className={styles.github}>\r\n        <a href=\"https://github.com/7-baig/Quiz-App\"><img src={githubIcon} alt=\"githubIcon\"/></a>\r\n      </div>\r\n\r\n      {/* Start Button */}\r\n        { !start \r\n        ? \r\n        <div className={styles.welcome}>\r\n        <img src={welcome} />\r\n        <button onClick={handleClick}>Start Quiz</button>\r\n        </div>\r\n        : null }\r\n\r\n      {/* Loading */}\r\n      {\r\n        loading\r\n        ?\r\n        <div className={styles.loading}>\r\n          <img src={loader} />\r\n          <p>One moment...</p>\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n\r\n      {/* Game Card */}\r\n        { \r\n          start && !loading\r\n          ? \r\n          <Main \r\n            question={data[number].question}\r\n            setNumber={setNumber}\r\n            number={number}\r\n            answers={answers([...data[number].incorrect_answers, data[number].correct_answer])}\r\n            questionNm={number + 1}\r\n            correctAnswer={data[number].correct_answer}\r\n            startQuiz={handleClick}\r\n          /> \r\n          : null \r\n        }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  type Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n  };\r\n  \r\n  export function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(\r\n        process.env.PUBLIC_URL,\r\n        window.location.href\r\n      );\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}